[workspace]
members = [
    "axoproject",
    "cargo-dist",
    "cargo-dist-schema",
]
resolver = "2"
exclude = ["axoproject/tests/projects/"]

[workspace.package]
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/axodotdev/cargo-dist"
homepage = "https://opensource.axo.dev/cargo-dist/"
version = "0.23.0-prerelease.2"

[workspace.dependencies]
# intra-workspace deps (you need to bump these versions when you cut releases too!
cargo-dist-schema = { version = "=0.23.0-prerelease.2", path = "cargo-dist-schema" }
axoproject = { version = "=0.23.0-prerelease.2", path = "axoproject", default-features = false, features = ["cargo-projects", "generic-projects", "npm-projects"] }

# first-party deps
axocli = { version = "0.2.0" }
axoupdater = { version = "0.7.2" }
axotag = "0.2.0"
axoasset = { version = "1.0.0", features = ["json-serde", "toml-serde", "toml-edit", "compression", "remote"] }
axoprocess = { version = "0.2.0" }
gazenot = { version = "0.3.3" }

# third-party deps
clap = { version = "4.5.18", features = ["derive"] }
console = { version = "0.15.8" }
clap-cargo = { version = "0.14.0" }
comfy-table = "7.1.1"
miette = { version = "7.2.0" }
thiserror = "1.0.63"
tracing = { version = "0.1.36", features = ["log"] }
serde = { version = "1.0.210", features = ["derive"] }
serde_json = { version = "1.0.128" }
cargo_metadata = "0.18.1"
camino = { version = "1.1.9", features = ["serde1"] }
semver = "1.0.23"
newline-converter = "0.3.0"
dialoguer = "0.11.0"
sha2 = "0.10.6"
minijinja = { version = "2.3.1", features = ["debug", "loader", "builtins", "json", "custom_syntax"] }
include_dir = "0.7.4"
itertools = "0.13.0"
cargo-wix = "0.3.8"
uuid = { version = "1", features = ["v4"] }
mach_object = "0.1"
goblin = "0.8.2"
similar = "2.6.0"
tokio = { version = "1.40.0", features = ["full"] }
temp-dir = "0.1.13"
sha3 = "0.10.8"
blake2 = "0.10.6"
insta = { version = "1.40.0", features = ["filters"] }
tar = "0.4.41"
flate2 = "1.0.33"
pathdiff = { version = "0.2.1", features = ["camino"] }
url = "2.5.0"
parse-changelog = "0.6.9"
schemars = "0.8.21"
serde_yml = "0.0.10"
spdx = "0.10.6"
base64 = "0.22.1"

[workspace.metadata.release]
shared-version = true
tag-name = "v{{version}}"
pre-release-commit-message = "release: {{version}}"
publish = false

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.23.0-prerelease.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "axodotdev/homebrew-tap"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@axodotdev"
# Publish jobs to run in CI
publish-jobs = ["homebrew", "npm", "./publish-crates"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "aarch64-unknown-linux-musl", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Where to host releases
hosting = ["axodotdev", "github"]
# Whether to install an updater program
install-updater = false
# Whether to enable GitHub Attestations
github-attestations = true
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"

[[workspace.metadata.dist.extra-artifacts]]
artifacts = ["dist-manifest-schema.json"]
build = ["cargo", "run", "--release", "--", "dist", "manifest-schema", "--output=dist-manifest-schema.json"]

[workspace.metadata.dist.github-custom-runners]
aarch64-unknown-linux-gnu = "buildjet-8vcpu-ubuntu-2204-arm"
aarch64-unknown-linux-musl = "buildjet-8vcpu-ubuntu-2204-arm"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
